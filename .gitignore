# # Ignorer les fichiers temporaires de Visual Studio, générer les résultats et
# # fichiers générés par les modules complémentaires Visual Studio populaires.
# #
# # Obtenez les dernières informations sur https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# Fichiers spécifiques à l'utilisateur
* .rsuser
* .suo
* .user
* .userosscache
* .sln.docstates

# Fichiers spécifiques à l'utilisateur (MonoDevelop / Xamarin Studio)
* .userprefs

# Fichiers mono générés automatiquement
mono_crash. *

# Construire les résultats
[ Dd ] ebug /
[ Dd ] ebugPublic /
[ Rr ] élease /
[ Rr ] éleases /
x64 /
x86 /
[ Ww ] [ Ii ] [ Nn ] 32 /
[ Aa ] [ Rr ] [ Mm ] /
[ Aa ] [ Rr ] [ Mm ] 64 /
bld /
[ Bb ] dans /
[ Oo ] bj /
[ Ll ] og /
[ Ll ] ogs /

# Répertoire cache / options de Visual Studio 2015/2017
.vs /
# Décommentez si vous avez des tâches qui créent les fichiers statiques du projet dans wwwroot
# wwwroot /

# Fichiers générés automatiquement par Visual Studio 2017
Généré \ Files /

# Résultats du test MSTest
[ Tt ] est [ Rr ] esult * /
[ Bb ] uild [ Ll ] og. *

# NUnit
* .VisualState.xml
TestResult.xml
nunit- * .xml

# Générer les résultats d'un projet ATL
[ Dd ] ebugPS /
[ Rr ] eleasePS /
dlldata.c

# Résultats de référence
BenchmarkDotNet.Artifacts /

# .NET Core
project.lock.json
project.fragment.lock.json
artefacts /

# Échafaudage ASP.NET
ÉchafaudageReadMe.txt

# StyleCop
StyleCopReport.xml

# Fichiers créés par Visual Studio
* _i.c
* _p.c
* _h.h
* .ilk
* .meta
* .obj
* .iobj
* .pch
* .pdb
* .ipdb
* .pgc
* .pgd
* .rsp
* .sbr
* .tlb
* .tli
* .tlh
* .tmp
* .tmp_proj
* _wpftmp.csproj
* .log
* .vspscc
* .vssscc
.builds
* .pidb
* .svclog
* .scc

# Fichiers de test Chutzpah
_Chutzpah *

# Fichiers de cache Visual C ++
ipch /
* .aps
* .ncb
* .opendb
* .opensdf
* .sdf
* .cachefile
* .VC.db
* .VC.VC.opendb

# Profileur Visual Studio
* .psess
* .vsp
* .vspx
* .sap

# Fichiers de trace Visual Studio
* .e2e

# Espace de travail local TFS 2012
$ tf /

# Boîte à outils d'automatisation du guidage
* .gpState

# ReSharper est un complément de codage .NET
_ReSharper * /
* . [ Rr ] e [ Ss ] harper
* .DotSettings.user

# TeamCity est un complément de build
_TeamCity *

# DotCover est un outil de couverture de code
* .dotCover

# AxoCover est un outil de couverture de code
.axoCover / *
! .axoCover / settings.json

# Coverlet est un outil gratuit de couverture de code multiplateforme
couverture * .json
couverture * .xml
couverture * .info

# Résultats de la couverture du code Visual Studio
* .couverture
* .coveragexml

# NCrunch
_NCrunch_ *
. * crunch * .local.xml
nCrunchTemp_ *

# MightyMoose
* .mm. *
AutoTest.Net /

# Atelier Web (sass)
.sass-cache /

# Dossier de sortie Installshield
[ Ee ] xpress /

# DocProject est un complément de générateur de documentation
DocProject / buildhelp /
DocProject / Help / * .HxT
DocProject / Help / * .HxC
DocProject / Help / * .hhc
DocProject / Help / * .hhk
DocProject / Help / * .hhp
DocProject / Aide / Html2
DocProject / Aide / html

# Répertoire Click-Once
publier /

# Publier la sortie Web
* . [ Pp ] ublish.xml
* .azurePubxml
# Remarque: commentez la ligne suivante si vous souhaitez enregistrer vos paramètres de déploiement Web,
# mais les chaînes de connexion à la base de données (avec des mots de passe potentiels) ne seront pas chiffrées
* .pubxml
* .publishproj

# Paramètres de publication de Microsoft Azure Web App. Commentez la ligne suivante si vous le souhaitez
# archiver vos paramètres de publication Azure Web App, mais les informations sensibles contenues
# dans ces scripts ne sera pas chiffré
PublishScripts /

# Forfaits NuGet
* .nupkg
# NuGet Symbol Packages
* .snupkg
# Le dossier packages peut être ignoré en raison de la restauration de package
** / [ Pp ] ackages / *
# sauf build /, qui est utilisé comme cible MSBuild.
! ** / [ Pp ] ackages / build /
# Décommentez si nécessaire mais généralement, il sera régénéré en cas de besoin
# ! ** / [Pp] ackages / repositories.config
Les fichiers project.json de # NuGet v3 produisent des fichiers plus ignorables
* .nuget.props
* .nuget.targets

# Jetons d'accès personnels et informations d'identification Nuget
nuget.config

# Sortie de build Microsoft Azure
csx /
* .build.csdef

# Émulateur Microsoft Azure
ecf /
rcf /

# Répertoires et fichiers de package d'application du Windows Store
AppPackages /
BundleArtifacts /
Package.StoreAssociation.xml
_pkginfo.txt
* .appx
* .appxbundle
* .appxupload

# Fichiers de cache Visual Studio
# fichiers se terminant par .cache peuvent être ignorés
* . [ Cc ] mal
# mais gardez une trace des répertoires se terminant par .cache
! ? * . [ Cc ] mal /

# Autres
ClientBin /
~ $ *
* ~
* .dbmdl
* .dbproj.schemaview
* .jfm
* .pfx
* .publishsettings
orleans.codegen.cs

# L' inclusion de fichiers de noms forts peut présenter un risque de sécurité
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
# * .snk

# Puisqu'il y a plusieurs flux de travail, décommentez la ligne suivante pour ignorer bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
# bower_components /

# Projets RIA / Silverlight
Generated_Code /

# Sauvegarde et rapport des fichiers de la conversion d'un ancien fichier de projet
# vers une version plus récente de Visual Studio. Les fichiers de sauvegarde ne sont pas nécessaires,
# parce que nous avons git ;-)
_UpgradeReport_Files /
Sauvegarde * /
UpgradeLog * .XML
UpgradeLog * .htm
ServiceFabricBackup /
* .rptproj.bak

# Fichiers SQL Server
* .mdf
* .ldf
* .ndf

# Projets de Business Intelligence
* .rdl.data
* .bim.layout
* .bim_ * .settings
* .rptproj.rsuser
* - [ Bb ] ackup.rdl
* - [ Bb ] ackup  ( [ 0-9 ] ) .rdl
* - [ Bb ] ackup  ( [ 0-9 ] [ 0-9 ] ) .rdl

# Microsoft Fakes
FauxAssemblées /

# Fichier de configuration du plugin GhostDoc
* .GhostDoc.xml

# Outils Node.js pour Visual Studio
.ntvs_analysis.dat
node_modules /

# Journal de génération de Visual Studio 6
* .plg

# Fichier d'options de l'espace de travail Visual Studio 6
* .opt

# Fichier d'espace de travail généré automatiquement par Visual Studio 6 (contient les fichiers ouverts, etc.)
* .vbw

# Sortie de build Visual Studio LightSwitch
** / * .HTMLClient / GeneratedArtifacts
** / * .DesktopClient / GeneratedArtifacts
** / * .DesktopClient / ModelManifest.xml
** / * .Server / GeneratedArtifacts
** / * .server / ModelManifest.xml
_Pvt_Extensions

# Gestionnaire de dépendances Paket
.paket / paket.exe
fichiers-paket /

# FAKE - F # Faire
.fake /

# Paramètres personnels de CodeRush
.cr / personnel

# Outils Python pour Visual Studio (PTVS)
__pycache__ /
* .pyc

# Cake - Décommentez si vous l'utilisez
# outils / **
# ! tools / packages.config

# Tabs Studio
* .tss

# Fichier de configuration JustMock de Telerik
* .jmconfig

# Sortie de build BizTalk
* .btp.cs
* .btm.cs
* .odx.cs
* .xsd.cs

# Résultats de l'analyse de l'interface utilisateur OpenCover
OpenCover /

# Sortie d'exécution locale Azure Stream Analytics
ASALocalRun /

# Journal binaire et structuré MSBuild
* .binlog

# Fichier de configuration du débogueur GPU NVidia Nsight
* .nvuser

# Dossier de travail MFractors (outil de productivité Xamarin)
.mfractor /

# Histoire locale pour Visual Studio
.localhistory /

# Base de données temporaire de contrôle de santé BeatPulse
healthchecksdb

# Dossier de sauvegarde pour l'outil de conversion de référence de package dans Visual Studio 2017
MigrationBackup /

# Dossier de travail Ionide (cross platform F # VS Code tools)
.ionide /

# Fody - schéma XML généré automatiquement
FodyWeavers.xsd

# Fichiers VS Code pour ceux qui travaillent sur plusieurs outils
.vscode / *
! .vscode / settings.json
! .vscode / tasks.json
! .vscode / launch.json
! .vscode / extensions.json
* .code-workspace

# Histoire locale pour Visual Studio Code
.histoire /

# Fichiers Windows Installer à partir des sorties de build
* .cab
* .msi
* .msix
* .msm
* .msp

# Pilote JetBrains
.idea /
* .sln.iml
