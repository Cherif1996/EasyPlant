//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré à partir d'un modèle.
//
//     Des modifications manuelles apportées à ce fichier peuvent conduire à un comportement inattendu de votre application.
//     Les modifications manuelles apportées à ce fichier sont remplacées si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EasyPlant.DAL
{
    using System;
    using System.Collections.Generic;
    
    public partial class Production
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public Production()
        {
            this.ClotureProds = new HashSet<ClotureProd>();
            this.Comptages = new HashSet<Comptage>();
        }
    
        public int CodeProduction { get; set; }
        public int CodeVariete { get; set; }
        public int RefCommande { get; set; }
        public int CodeTypeProduction { get; set; }
        public int CodeSupport { get; set; }
        public int RefSerre { get; set; }
        public int CodeUtilisateur { get; set; }
        public System.DateTime DateSemi { get; set; }
        public System.DateTime DateLivPrevu { get; set; }
        public System.DateTime DateLiv { get; set; }
        public System.DateTime DateGreffage { get; set; }
        public int CodeParProduction { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ClotureProd> ClotureProds { get; set; }
        public virtual Commande Commande { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Comptage> Comptages { get; set; }
        public virtual ParametrageProduction ParametrageProduction { get; set; }
        public virtual Production Production1 { get; set; }
        public virtual Production Production2 { get; set; }
        public virtual Serre Serre { get; set; }
        public virtual TypeProduction TypeProduction { get; set; }
        public virtual Utilisateur Utilisateur { get; set; }
    }
}
